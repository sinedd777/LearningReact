{"version":3,"sources":["services/api.js","store/reducers/auth.js","store/reducers/index.js","store/actionTypes.js","store/reducers/error.js","store/reducers/polls.js","store/index.js","store/actions/error.js","store/actions/auth.js","store/actions/polls.js","components/ErrorMessage.jsx","components/Auth.jsx","pages/AuthPage.jsx","components/CreatePoll.jsx","pages/CreatePollPage.jsx","components/Poll.jsx","services/color.js","components/Polls.jsx","pages/TestPage.jsx","pages/HomePage.jsx","pages/PollPages.jsx","containers/RouteViews.jsx","containers/NavBar.jsx","containers/App.jsx","index.js"],"names":["host","process","HOST","api","call","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","method","path","data","response","wrap","_context","prev","next","axios","sent","abrupt","stop","_x","_x2","_x3","apply","this","arguments","setToken","token","defaults","headers","common","DEFAULT_STATE","isAuthenticated","user","combineReducers","auth","state","length","undefined","action","type","keys","error","message","objectSpread","polls","currentPoll","poll","store","createStore","rootReducer","compose","applyMiddleware","thunk","addError","setCurrentUser","logout","dispatch","console","log","localStorage","clear","setPolls","setCurrentPoll","getCurrentPoll","_ref5","_callee5","_context5","API","concat","t0","_x5","connect","react_default","createElement","react","class","role","Auth","props","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","username","password","handleChange","bind","assertThisInitialized","handleSubmit","e","setState","defineProperty","target","name","value","_this$state","authType","preventDefault","authUser","_this$state2","className","onSubmit","onChange","placeholder","minLength","Component","_ref2","objectWithoutProperties","setItem","err","AuthPage","react_router","to","components_ErrorMessage","components_Auth","CreatePoll","question","options","visible","addAnswer","handleAnswer","toConsumableArray","index","createPoll","toggle","_this2","map","option","i","key","required","Alert","color","isOpen","Button","block","onClick","_ref4","_callee4","_context4","_x4","CreatePollPage","components_CreatePoll","Redirect","vote","_ref6","_callee6","_context6","_x6","answers","_id","answer","labels","datasets","label","backgroundColor","Math","random","toString","slice","borderColor","votes","react_chartjs_2_es","Polls","handleSelect","remove","getPolls","id","deletePoll","history","push","_this$props","getUserPolls","ListGroup_default","as","Item","ButtonGroup_default","aria-label","es_Button","variant","_callee2","_context2","_ref3","_callee3","_context3","jwtToken","decode","withRouter","es","HomePage","components_Polls","PollPage","match","getPoll","params","components_Poll","exact","render","pages_CreatePollPage","pages_HomePage","pages_AuthPage","TestPage","PollPages","assign","href","App","react_router_dom","NavBar","containers_RouteViews","ReactDOM","containers_App","document","getElementById"],"mappings":"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","file":"static/js/main.0a146031.chunk.js","sourcesContent":["import axios from 'axios';\r\nconst host = process.env.HOST;\r\n\r\n\r\nexport const setToken = (token) =>{\r\n    if(token){\r\n        axios.defaults.headers.common['Authorization'] = 'Bearer '+token;\r\n    }else{\r\n        delete axios.defaults.headers.common['Authorization'];\r\n    }\r\n};\r\n\r\n\r\nexport const call = async (method, path, data) =>{\r\n    const response = await axios[method](host+'/'+path,data);\r\n    return response.data;\r\n};\r\n\r\nexport default {call,setToken}","import {SET_CURRENT_USER} from \"../actionTypes\";\r\nimport {types} from \"@babel/core\";\r\n\r\nconst DEFAULT_STATE ={\r\n  isAuthenticated : false,\r\n    user:{}\r\n};\r\n\r\nexport default (state = DEFAULT_STATE,action)=>{\r\n    switch (action.type) {\r\n        case SET_CURRENT_USER:\r\n            return{\r\n                isAuthenticated: !!Object.keys(action.user).length,\r\n                user: action.user\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}","import {combineReducers} from 'redux';\r\nimport error from './error';\r\nimport auth from './auth'\r\nimport {polls,currentPoll} from './polls'\r\n\r\nexport default combineReducers({\r\n    auth,\r\n    error,\r\n    polls,\r\n    currentPoll\r\n})","export const ADD_ERROR = 'ADD_ERROR';\r\nexport const REMOVE_ERROR = 'REMOVE_ERROR';\r\n\r\nexport const SET_CURRENT_USER = 'SET_CURRENT_USER';\r\n\r\nexport const REMOVE_POLL = 'REMOVE_POLL';\r\nexport const SET_POLLS = 'SET_POLLS';\r\nexport const SET_CURRENT_POLL = 'SET_CURRENT_POLL';","import {ADD_ERROR,REMOVE_ERROR} from \"../actionTypes\";\r\n\r\nexport default (state={message:null}, action) =>{\r\n    switch(action.type){\r\n        case ADD_ERROR:\r\n            return {...state, message: action.error};\r\n\r\n        case REMOVE_ERROR:\r\n            return {...state, message: null};\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","import { SET_POLLS, SET_CURRENT_POLL } from '../actionTypes';\r\n\r\nexport const polls = (state = [], action) => {\r\n    switch (action.type) {\r\n        case SET_POLLS:\r\n            return action.polls;\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const currentPoll = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case SET_CURRENT_POLL:\r\n            return action.poll;\r\n        default:\r\n            return state;\r\n    }\r\n};","import {createStore,applyMiddleware,compose} from 'redux';\r\nimport thunk from 'redux-thunk';\r\n\r\nimport rootReducer from './reducers';\r\n\r\nconst DEFAULT_STATE = {\r\n    error:{\r\n        message:null\r\n    }\r\n};\r\n\r\nexport const store = createStore(\r\n    rootReducer,\r\n    DEFAULT_STATE,\r\n    compose(\r\n        applyMiddleware(thunk),\r\n    )\r\n);","import {ADD_ERROR,REMOVE_ERROR} from \"../actionTypes\";\r\n\r\nexport const addError = error =>({\r\n    type: ADD_ERROR,\r\n    error\r\n});\r\n\r\nexport const removeError = () =>({\r\n    type: REMOVE_ERROR,\r\n});","import {addError,removeError} from \"./error\";\r\nimport {SET_CURRENT_USER } from '../actionTypes';\r\n\r\nimport api from '../../services/api';\r\n\r\nexport const setCurrentUser = user =>({\r\n   type: SET_CURRENT_USER,\r\n    user\r\n});\r\n\r\nexport const setToken = token =>{\r\n    api.setToken(token)\r\n};\r\n\r\nexport const logout = () =>{\r\n    return dispatch=> {\r\n        console.log(\"works\");\r\n        localStorage.clear();\r\n        api.setToken(null);\r\n        dispatch(setCurrentUser({}));\r\n        dispatch(removeError());\r\n    }\r\n};\r\n\r\n\r\nexport const authUser = (path,data) =>{\r\n  return async dispatch=>{\r\n      try {\r\n        const {token, ...user} = await api.call('post','auth/'+path,data);\r\n        localStorage.setItem('jwtToken',token);\r\n        api.setToken(token);\r\n        dispatch(setCurrentUser(user));\r\n        dispatch(removeError());\r\n\r\n      }catch (e) {\r\n          console.log(e.response.data.err);\r\n          const error = e.response.data.err;\r\n          dispatch(addError(error));\r\n      }\r\n  }\r\n};","import API from '../../services/api';\r\nimport { SET_POLLS, SET_CURRENT_POLL } from '../actionTypes';\r\nimport { addError, removeError } from './error';\r\n\r\nexport const setPolls = polls => ({\r\n    type: SET_POLLS,\r\n    polls,\r\n});\r\n\r\nexport const setCurrentPoll = poll => ({\r\n    type: SET_CURRENT_POLL,\r\n    poll,\r\n});\r\n\r\nexport const deletePoll = (path) =>{\r\n   return async dispatch=>{\r\n       try {\r\n           await API.call('delete', `poll/${path}`);\r\n           dispatch(removeError());\r\n       }catch (e) {\r\n           const { error } = e.response.data;\r\n           dispatch(addError(error));\r\n       }\r\n   }\r\n\r\n};\r\n\r\nexport const getPolls = () => {\r\n    return async dispatch => {\r\n        try {\r\n            const polls = await API.call('get', `poll`);\r\n            dispatch(setPolls(polls));\r\n            dispatch(removeError());\r\n        } catch (err) {\r\n            const { error } = err.response.data;\r\n            dispatch(addError(error));\r\n        }\r\n    };\r\n};\r\n\r\nexport const getUserPolls = () => {\r\n    return async dispatch => {\r\n        try {\r\n            const polls = await API.call('get', 'poll/user');\r\n            dispatch(setPolls(polls));\r\n            dispatch(removeError());\r\n        } catch (err) {\r\n            const { error } = err.response.data;\r\n            dispatch(addError(error));\r\n        }\r\n    };\r\n};\r\n\r\nexport const createPoll = data => {\r\n    return async dispatch => {\r\n        try {\r\n            const poll = await API.call('post', 'poll', data);\r\n            dispatch(setCurrentPoll(poll));\r\n            dispatch(removeError());\r\n        } catch (err) {\r\n            const { error } = err.response.data;\r\n            dispatch(addError(error));\r\n        }\r\n    };\r\n};\r\n\r\nexport const getCurrentPoll = path => {\r\n    return async dispatch => {\r\n        try {\r\n            const poll = await API.call('get', `poll/${path}`);\r\n            dispatch(setCurrentPoll(poll));\r\n            dispatch(removeError());\r\n        } catch (err) {\r\n            const { error } = err.response.data;\r\n            dispatch(addError(error));\r\n        }\r\n    };\r\n};\r\n\r\nexport const vote = (path, data) => {\r\n    return async dispatch => {\r\n        try {\r\n            const poll = await API.call('post', `poll/${path}`, data);\r\n            dispatch(setCurrentPoll(poll));\r\n        } catch (err) {\r\n\r\n            console.log(err.response.data.err);\r\n            const error = err.response.data.err;\r\n            dispatch(addError(error));\r\n        }\r\n    };\r\n};","import React,{Fragment} from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport '../styles/errormessage.css'\r\nconst ErrorMessage = ({error}) =>(\r\n    <Fragment>\r\n        {error.message!=null &&\r\n            <div><br/>\r\n            <div class=\"warning alert alert-warning \" role=\"alert\">\r\n                    {error.message}\r\n            </div>\r\n            </div>}\r\n    </Fragment>\r\n);\r\n\r\n\r\nexport default connect(store=> ({error: store.error}))(ErrorMessage);","import React,{Component,Fragment} from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport {authUser,logout} from \"../store/actions\";\r\nimport '../styles/auth.css'\r\n\r\nclass Auth extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            username: '',\r\n            password: ''\r\n        };\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    handleChange(e){\r\n        this.setState({[e.target.name]:e.target.value})\r\n    }\r\n    handleSubmit(e){\r\n        const {username,password} = this.state;\r\n        const {authType} = this.props;\r\n        e.preventDefault();\r\n        console.log(username,password);\r\n\r\n        this.props.authUser(authType,{username,password});\r\n    }\r\n\r\n    render() {\r\n        const {username,password} = this.state;\r\n\r\n        return <div>\r\n        <form className=\"form\" onSubmit={this.handleSubmit}>\r\n            <br/><br/>\r\n            <table className=\"table\">\r\n                <tr><input className=\"form-control mb-2 mr-sm-2\" type=\"text\" value={username} name=\"username\" onChange={this.handleChange} placeholder=\"Username\" minLength={5} />\r\n                </tr>\r\n                <tr><input className=\"form-control mb-2 mr-sm-2\" type=\"password\" value={password} name=\"password\" onChange={this.handleChange} placeholder=\"Password\" minLength={8}/>\r\n                </tr>\r\n                <tr> <button className=\"btn btn-primary buttons_center\" type=\"submit\" >Submit</button>\r\n                </tr>\r\n            </table>\r\n        </form>\r\n        </div>\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    ()=>({}),\r\n    {authUser,logout}\r\n    )\r\n(Auth)","import React from 'react';\r\nimport {Redirect} from 'react-router-dom';\r\nimport ErrorMessage from \"../components/ErrorMessage\";\r\nimport Auth from \"../components/Auth\";\r\n\r\nconst AuthPage = ({authType,isAuthenticated}) =>{\r\n    if(isAuthenticated) return (\r\n        <div>\r\n\r\n            <Redirect to =\"/\" />\r\n            <p>REGISTERED</p>\r\n        </div>\r\n        );\r\n\r\n    return(\r\n        <div>\r\n            <ErrorMessage/>\r\n            <Auth authType = {authType}/>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default AuthPage;","import React, { Component, Fragment } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { createPoll } from '../store/actions';\r\nimport Redirect from \"react-router-dom/es/Redirect\";\r\nimport '../styles/createpoll.css'\r\nimport Alert from \"reactstrap/es/Alert\";\r\nimport Button from \"reactstrap/es/Button\";\r\n\r\nclass CreatePoll extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            question: '',\r\n            options: ['', ''],\r\n            visible:false\r\n    };\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.addAnswer = this.addAnswer.bind(this);\r\n        this.handleAnswer = this.handleAnswer.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    handleChange(e) {\r\n        this.setState({ [e.target.name]: e.target.value });\r\n    }\r\n\r\n    addAnswer() {\r\n        this.setState({ options: [...this.state.options, ''] });\r\n    }\r\n\r\n    // removeAnswer(){\r\n    //     const array = [...this.state.options]; // make a separate copy of the array\r\n    //     const index = array.indexOf();\r\n    //     if (index !== -1) {\r\n    //         array.splice(index, 1);\r\n    //         this.setState({people: array});\r\n    //     }    }\r\n\r\n    handleAnswer(e, index) {\r\n        const options = [...this.state.options];\r\n        options[index] = e.target.value;\r\n        this.setState({ options });\r\n    }\r\n\r\n    handleSubmit(e) {\r\n        e.preventDefault();\r\n        this.props.createPoll(this.state);\r\n        this.toggle()\r\n    }\r\n    toggle() {\r\n        this.setState({\r\n            visible: !this.state.visible\r\n        })\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        const options = this.state.options.map((option, i) => (\r\n            <Fragment key={i}>\r\n                <input\r\n                    className=\"form-control mb-2 mr-sm-2\"\r\n                    type=\"text\"\r\n                    required=\"required\"\r\n                    value={option}\r\n                    onChange={e => this.handleAnswer(e, i)}\r\n                    placeholder=\"Option\"\r\n                />\r\n            </Fragment>\r\n        ));\r\n        return (\r\n            <div>\r\n                    <br/>\r\n                <div className=\"alert1\">\r\n                    <Alert color=\"primary\" isOpen={this.state.visible} toggle={this.toggle.bind(this)}>Success! Want to add Another?</Alert>\r\n                </div>\r\n                <form className=\"form\" onSubmit={this.handleSubmit}>\r\n                    <br/>\r\n                        <table className=\"table\">\r\n                            <tr>\r\n                                <input\r\n                    className=\"form-control mb-2 mr-sm-2\"\r\n                    type=\"text\"\r\n                    required=\"required\"\r\n                    name=\"question\"\r\n                    value={this.state.question}\r\n                    onChange={this.handleChange}\r\n                    placeholder=\"Question\"\r\n                    />\r\n                        </tr>\r\n                <tr>\r\n                <div>\r\n                        {options}\r\n                </div>\r\n                </tr>\r\n                    </table>\r\n                <div className=\"buttons_center\">\r\n                    <Button block={true} color=\"primary\" onClick={this.addAnswer}>Add Options</Button>{' '}\r\n                    <Button block={true} color=\"info\" type=\"submit\">Submit</Button>{' '}\r\n                </div>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(() => ({}), { createPoll })(CreatePoll);\r\n\r\n","import React from 'react';\r\nimport Redirect from \"react-router-dom/es/Redirect\";\r\nimport ErrorMessage from \"../components/ErrorMessage\";\r\nimport CreatePoll from \"../components/CreatePoll\";\r\n\r\nconst CreatePollPage = ({isAuthenticated}) =>{\r\n    if(!isAuthenticated) return <Redirect to ='/login'/>;\r\n\r\n    return(\r\n        <div>\r\n            <ErrorMessage/>\r\n            <CreatePoll/>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default CreatePollPage;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Pie } from 'react-chartjs-2';\r\n\r\nimport { vote } from '../store/actions';\r\nimport { color } from '../services/color';\r\n\r\nimport '../styles/polls.css'\r\n\r\nconst Poll = ({ poll, vote }) => {\r\n    const answers =\r\n        poll.options &&\r\n        poll.options.map(option => (\r\n            <button\r\n                onClick={() => vote(poll._id, { answer: option.option })}\r\n                className=\"btn btn-danger\"\r\n                key={option._id}>\r\n                {option.option}\r\n            </button>\r\n        ));\r\n\r\n    const data = poll.options&&{\r\n        labels: poll.options.map(option => option.option),\r\n        datasets: [\r\n            {\r\n                label: poll.question,\r\n                backgroundColor: poll.options.map(option => color()),\r\n                borderColor: '#323643',\r\n                data: poll.options.map(option => option.votes),\r\n            },\r\n        ],\r\n    };\r\n\r\n    return (\r\n        <div className=\"centerdiv\">\r\n            <table >\r\n                <tr>\r\n                    <th>\r\n                    <h3 className=\"poll-title\">{poll.question}</h3></th>\r\n                </tr>\r\n            </table>\r\n            <br/>\r\n            <div className=\"centerbutton\">{answers}</div>\r\n            <br/>\r\n            {poll.options&&<Pie data={data} />}\r\n            </div>\r\n    );\r\n};\r\n\r\nexport default connect(\r\n    store => ({\r\n        poll: store.currentPoll,\r\n    }),\r\n    { vote },\r\n)(Poll);","export const color = () => {\r\n    return (\r\n        '#' +\r\n        Math.random()\r\n            .toString(16)\r\n            .slice(2, 8)\r\n    );\r\n};","import React, { Component, Fragment } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { getPolls, getUserPolls ,getCurrentPoll,deletePoll} from '../store/actions';\r\nimport ListGroup from \"react-bootstrap/ListGroup\";\r\nimport {Button} from \"react-bootstrap\";\r\nimport ButtonGroup from \"react-bootstrap/ButtonGroup\";\r\nimport '../styles/polls.css'\r\nimport Alert from \"reactstrap/es/Alert\";\r\n\r\nclass Polls extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleSelect = this.handleSelect.bind(this);\r\n        this.toggle=this.toggle.bind(this);\r\n        this.state = {\r\n            remove:false,\r\n            visible:false,\r\n            class:'ul',\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { getPolls } = this.props;\r\n        getPolls();\r\n    }\r\n\r\n\r\n    handleSelect(id) {\r\n        if(this.state.remove===true)\r\n        {\r\n            this.props.deletePoll(id);\r\n            this.setState({\r\n                visible: !this.state.visible,\r\n                remove: !this.state.remove,\r\n                class: 'ul'\r\n            });\r\n\r\n        }\r\n        else{\r\n            const {history} = this.props;\r\n            history.push(`/poll/${id}`);\r\n        }\r\n\r\n    }\r\n\r\n    toggle() {\r\n        this.setState({\r\n            remove: !this.state.remove,\r\n            class: 'x',\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const { getPolls, getUserPolls, auth } = this.props;\r\n\r\n        const polls = this.props.polls.map(poll => (\r\n            <ListGroup as={this.state.class} >\r\n                <ListGroup.Item as=\"li\" onClick={() => this.handleSelect(poll._id)}  key={poll._id} >\r\n                    {poll.question}</ListGroup.Item>\r\n            </ListGroup>\r\n                )\r\n        );\r\n\r\n\r\n        return (\r\n            <Fragment>\r\n                <div className=\"alert1\">\r\n                    <Alert color=\"primary\" isOpen={this.state.visible} toggle={()=>{\r\n                        this.setState({\r\n                        visible: !this.state.visible,\r\n                    })\r\n                    }}>Success! Want to Delete Another?</Alert>\r\n                </div>\r\n                {auth.isAuthenticated && (\r\n                    <div className=\"buttons\">\r\n                        <ButtonGroup aria-label=\"Basic example\" class=\"polls\">\r\n                            <Button variant=\"secondary\" onClick={getPolls}>All Polls</Button>\r\n                            <Button variant=\"secondary\" onClick={getUserPolls}>My Polls</Button>\r\n                            <Button variant=\"secondary\" onClick={()=>{\r\n                                getUserPolls();\r\n                                this.toggle()}}>Delete Polls</Button>\r\n                        </ButtonGroup>\r\n\r\n                    </div>\r\n                )}\r\n                <div className=\"polls\">{polls}</div>\r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default connect(\r\n    store => ({\r\n        auth: store.auth,\r\n        polls: store.polls,\r\n    }),\r\n    { getPolls, getUserPolls ,getCurrentPoll,deletePoll},\r\n)(Polls);","import React, { Fragment } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport decode from 'jwt-decode';\r\nimport { Provider } from 'react-redux';\r\nimport { store } from '../store';\r\nimport { setToken, setCurrentUser, addError } from '../store/actions';\r\nimport Auth from '../components/Auth';\r\nimport Poll from '../components/Poll';\r\nimport ErrorMessage from '../components/ErrorMessage';\r\nimport CreatePoll from '../components/CreatePoll';\r\nimport Polls from \"../components/Polls\";\r\nimport CreatePollPage from \"./CreatePollPage\";\r\n\r\n\r\nif (localStorage.jwtToken) {\r\n    setToken(localStorage.jwtToken);\r\n    try {\r\n        store.dispatch(setCurrentUser(decode(localStorage.jwtToken)));\r\n    } catch (err) {\r\n        store.dispatch(setCurrentUser({}));\r\n        store.dispatch(addError(err));\r\n    }\r\n}\r\n\r\nconst UITest = (props) => (\r\n    <Provider store={store}>\r\n        <Fragment>\r\n            {/*<h1>UI Test Page</h1>*/}\r\n            {/*<h2>Testing Error Component: </h2>*/}\r\n            {/*<ErrorMessage />*/}\r\n            {/*<hr />*/}\r\n\r\n            {/*<h2>Testing Auth Component: </h2>*/}\r\n            {/*<Auth />*/}\r\n            {/*<hr />*/}\r\n\r\n\r\n            <h3> Create Poll </h3>\r\n            <CreatePoll />\r\n            <hr />\r\n\r\n\r\n            {/*<h2>Testing Polls Component: </h2>*/}\r\n            {/*<Polls {...props} />*/}\r\n            {/*<hr />*/}\r\n\r\n            {/*<h2>Testing Poll Component: </h2>*/}\r\n            {/*<Poll />*/}\r\n            {/*<hr />*/}\r\n        </Fragment>\r\n    </Provider>\r\n);\r\n\r\nexport default withRouter(UITest);","import React from 'react';\r\nimport ErrorMessage from '../components/ErrorMessage';\r\nimport Polls from '../components/Polls';\r\nimport '../styles/homepage.css'\r\n\r\nconst HomePage = props =>(\r\n    <div>\r\n        <ErrorMessage/>\r\n        <h3 className=\"\"> Current Polls</h3>\r\n        <br/>\r\n        <Polls{...props}/>\r\n    </div>);\r\nexport default HomePage;\r\n","import React from 'react';\r\n\r\nimport Poll from '../components/Poll';\r\nimport ErrorMessage from '../components/ErrorMessage';\r\n\r\nconst PollPage = ({match,getPoll})=> {\r\n    getPoll(match.params.id);\r\n    return(\r\n        <div>\r\n            <ErrorMessage/>\r\n            <br/>\r\n            <Poll/>\r\n        </div>\r\n    )\r\n};\r\nexport default PollPage;","import React from 'react'\r\nimport {connect} from 'react-redux';\r\nimport {Switch,Route,withRouter} from 'react-router-dom'\r\n\r\nimport AuthPage from \"../pages/AuthPage\";\r\nimport CreatePollPage from \"../pages/CreatePollPage\";\r\nimport TestPage from '../pages/TestPage';\r\nimport HomePage from \"../pages/HomePage\";\r\nimport PollPages from '../pages/PollPages';\r\n\r\nimport {getCurrentPoll} from \"../store/actions\";\r\n\r\nconst RouteViews = ({ getCurrentPoll, auth }) => (\r\n<main>\r\n\r\n    <Switch>\r\n        <Route exact path =\"/poll/new\" render={() => <CreatePollPage isAuthenticated={auth.isAuthenticated}/>} />\r\n        <Route exact path =\"/\" render={props => <HomePage{...props}/>} />\r\n        <Route exact path =\"/login\" render={() => <AuthPage authType=\"login\" isAuthenticated={auth.isAuthenticated}/>} />\r\n        <Route exact path =\"/register\" render={() => <AuthPage authType=\"register\" isAuthenticated={auth.isAuthenticated}/>} />\r\n        <Route exact path = \"/createpoll\" render={()=> <TestPage/>} />\r\n\r\n        <Route\r\n            exact\r\n            path=\"/poll/:id\"\r\n            render={props => (\r\n                <PollPages getPoll={id => getCurrentPoll(id)} {...props} />\r\n            )}\r\n        />\r\n        <Route exact path = \"/poll/new\" render={()=> <CreatePollPage isAuthenticated={auth.isAuthenticated}/>} />\r\n    </Switch>\r\n\r\n</main>);\r\n\r\nexport default withRouter(connect(\r\n    store => ({auth : store.auth}),\r\n    {getCurrentPoll}\r\n)(RouteViews));","import React from 'react';\r\nimport {connect} from 'react-redux'\r\nimport {logout} from \"../store/actions\";\r\nimport {Navbar} from \"react-bootstrap\";\r\nimport {Nav} from \"react-bootstrap\";\r\nimport '../styles/navbar.css'\r\n\r\n\r\nconst Navbar1 = ({auth}) => (<div>\r\n\r\n    <nav className=\"navbar navbar-expand-sm barcolor navbar-dark\">\r\n        <ul className=\"navbar-nav\">\r\n            <li className=\"nav-item nav-brand font-weight-bold active\">\r\n                <a className=\"nav-link nav-brand\" href=\"/\">Pollr</a>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n                <a className=\"nav-link\" href=\"/createpoll\">Create Poll</a>\r\n            </li>\r\n\r\n        </ul>\r\n        <ul className=\"navbar-nav ml-auto\">\r\n            <li className=\"nav-item\">\r\n                <a className=\"nav-link\" href=\"/register\">Register</a>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n                <a className=\"nav-link\" href=\"/login\">Login</a>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n                <a className=\"nav-link\" onClick={logout} href=\"/\">Logout</a>\r\n            </li>\r\n        </ul>\r\n\r\n    </nav>\r\n    {/*            <Nav.Link href=\"/\" >Home</Nav.Link>*/}\r\n    {/*            <Nav.Link href=\"/register\" >Register</Nav.Link>*/}\r\n    {/*            <Nav.Link href=\"/login\"  >Login</Nav.Link>*/}\r\n    {/*            <Nav.Link href=\"/createpoll\" >Create Poll</Nav.Link>*/}\r\n    {/*            <Nav.Link href=\"\" onClick={console.log(\"helllo\")}>Logout</Nav.Link>*/}\r\n    {auth.isAuthenticated &&  <p className='text'>Welcome back <b>{auth.user.username}</b> !</p>}\r\n\r\n</div>);\r\n\r\nexport default  connect(store =>({ auth: store.auth}))(Navbar1);","import React, {Component, Fragment} from \"react\";\r\nimport api from '../services/api';\r\nimport {BrowserRouter as Router} from \"react-router-dom\";\r\nimport {Provider}  from 'react-redux';\r\nimport decode from 'jwt-decode';\r\n\r\nimport {store} from '../store';\r\nimport {setCurrentUser,addError,setToken} from \"../store/actions\";\r\nimport RouteViews from './RouteViews';\r\nimport Navbar1 from \"./NavBar\";\r\n\r\nif(localStorage.jwtToken){\r\n    setToken(localStorage.jwtToken);\r\n    try{\r\n        store.dispatch(setCurrentUser(decode(localStorage.jwtToken)))\r\n    }catch (e) {\r\n        store.dispatch(setCurrentUser({}));\r\n        store.dispatch(addError(e));\r\n    }\r\n}\r\n\r\nconst App = () => (\r\n    <Provider store={store}>\r\n        <Router>\r\n            <Fragment>\r\n                <Navbar1/>\r\n                <RouteViews/>\r\n            </Fragment>\r\n        </Router>\r\n    </Provider>\r\n\r\n);\r\n\r\n//\r\n// class App extends React.Component{\r\n//     async componentDidMount() {\r\n//         const result = await api.call('post', 'auth/login', {\r\n//             username: 'username',\r\n//             password: 'password'\r\n//         });\r\n//         console.log(result);\r\n//     }\r\n//\r\n//     render(){\r\n//         return <div>\r\n//             App works\r\n//         </div>\r\n//     }\r\n// }\r\n\r\n// import Navbar from \"../Navbar\"\r\n// import MainContent from \"../MainContent\";\r\n// import Footer from \"../Footer\";\r\n// function App() {\r\n//     return (<div>\r\n//         <Navbar/>\r\n//         <MainContent/>\r\n//         <Footer/>\r\n//         <input type=\"checkbox\" />\r\n//         <p>hello</p>\r\n//\r\n//         <input type=\"checkbox\" />\r\n//         <p>hello</p>\r\n//\r\n//         <input type=\"checkbox\" />\r\n//         <p>hello</p>\r\n//\r\n//         <input type=\"checkbox\" />\r\n//         <p>hello</p>\r\n//     </div>)\r\n// }\r\nexport default App\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport '../src/styles/main.css'\r\n\r\nimport App from './containers/App';\r\n\r\nReactDOM.render(<App/>,document.getElementById('root'));"],"sourceRoot":""}